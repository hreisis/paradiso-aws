{"version":3,"sources":["serviceWorker.js","components/LoadingComponent.js","shared/baseUrl.js","components/DirectoryComponent.js","components/TeaInfoComponent.js","components/FavoriteComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/teas.js","redux/comments.js","redux/partners.js","redux/promotions.js","redux/favorites.js","redux/auth.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","Loading","className","baseUrl","RenderDirectoryItem","tea","Card","to","_id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Directory","props","directory","teas","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderTea","favorite","postFavorite","in","transformProps","exitTransform","top","Button","outline","color","onClick","console","log","CardBody","CardText","description","RenderComments","comments","postComment","teaId","comment","text","rating","author","firstname","lastname","Intl","DateTimeFormat","year","month","day","format","Date","parse","updatedAt","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Label","htmlFor","select","model","id","defaultValue","textarea","rows","type","Component","TeaInfo","RenderFavoriteItem","deleteFavorite","Media","tag","left","middle","object","body","heading","Favorites","favorites","list","Header","isNavOpen","isSigninModalOpen","isSignupModalOpen","tooltipOpen","toggleNav","toggleSigninModal","toggleSignupModal","handleLogin","handleSignup","handleLogout","event","loginUser","username","value","password","preventDefault","signup","logoutUser","Fragment","Jumbotron","fluid","Navbar","dark","sticky","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","auth","isAuthenticated","user","isFetching","Tooltip","placement","target","Form","FormGroup","Input","innerRef","input","check","remember","SignuptoggleModal","Footer","href","role","RenderCard","item","Home","teasLoading","teasErrMess","promotion","promotionLoading","promotionErrMess","partner","partnerLoading","partnerErrMess","RenderPartner","PartnerList","partners","About","teasFailed","payload","addTeas","commentsFailed","addComments","promotionsLoading","promotionsFailed","addPromotions","promotions","partnersLoading","partnersFailed","addPartners","fetchFavorites","dispatch","favoritesLoading","bearer","localStorage","getItem","fetch","headers","then","response","ok","error","Error","status","statusText","json","addFavorites","catch","favoritesFailed","message","mapDispatchToProps","newComment","method","JSON","stringify","credentials","alert","postFeedback","feedback","fetchTeas","resetFeedbackForm","actions","reset","fetchComments","fetchPromotions","fetchPartners","creds","requestLogin","success","setItem","token","receiveLogin","removeItem","Main","PrivateRoute","component","rest","render","pathname","from","classNames","timeout","path","filter","featured","exact","params","commentsErrMess","exists","some","withRouter","connect","Teas","action","Comments","concat","Partners","Promotions","Auth","InitialFeedback","firstName","lastName","phoneNum","email","agree","contactType","store","createStore","combineReducers","createForms","feedbackForm","applyMiddleware","thunk","logger","App","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.616b8865.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col\">\n            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\n            <p>Loading...</p>\n        </div>\n    );\n};","export const baseUrl = 'http://52.27.22.176/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderDirectoryItem({tea}) {\n    return (\n        <Card>\n            <Link to={`/directory/${tea._id}`}>\n                <CardImg width='100%' src={baseUrl + tea.image} alt={tea.name} />\n                <CardImgOverlay>\n                    <CardTitle>{tea.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nfunction Directory(props) {\n\n    const directory = props.teas.teas.map(tea => {\n        return (\n            <div key={tea._id} className='col-md-5 m-1'>\n                <RenderDirectoryItem tea={tea} />\n            </div>\n        );\n    });\n\n    if (props.teas.isLoading) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.teas.errMess) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <div className='col'>\n                        <h4>{props.teas.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Directory</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>Directory</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className='row'>\n                {directory}\n            </div>\n        </div>\n    );\n}\n\nexport default Directory;","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardImgOverlay, Breadcrumb, BreadcrumbItem,\n    Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderTea({tea, favorite, postFavorite}) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + tea.image} alt={tea.name} />\n                    <CardImgOverlay>\n                        <Button outline color=\"primary\" onClick={() => favorite ? console.log('Already favorite') : postFavorite(tea._id)}>\n                            {\n                                favorite ?\n                                    <i className=\"fa fa-heart\" />\n                                    : \n                                    <i className=\"fa fa-heart-o\" />\n                            }\n                        </Button>\n                    </CardImgOverlay>\n                    <CardBody>\n                        <CardText>{tea.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n    );\n}\n\nfunction RenderComments({comments, postComment, teaId}) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                <Stagger in>\n                    {\n                        comments.map(comment => {\n                            return (\n                                <Fade in key={comment._id}>\n                                    <div>\n                                        <p>{comment.text}</p>\n                                        <p>{comment.rating} stars</p>\n                                        <p>-- {comment.author.firstname} {comment.author.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.updatedAt)))}</p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n                <CommentForm teaId={teaId} postComment={postComment} />\n            </div>\n        );\n    }\n    return <div />;\n}\n\nclass CommentForm extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.teaId, values.rating, values.text);\n    }\n\n    render() {\n        return (\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                    className=\"form-control\" defaultValue=\"5\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                    rows=\"6\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <Button type=\"submit\" color=\"primary\">\n                                Submit\n                            </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction TeaInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.tea) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.tea.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.tea.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderTea tea={props.tea} favorite={props.favorite} postFavorite={props.postFavorite} />\n                    <RenderComments\n                        comments={props.comments}\n                        postComment={props.postComment}\n                        teaId={props.tea._id}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nexport default TeaInfo;","import React from 'react';\nimport { Media, Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\n\nfunction RenderFavoriteItem({ tea, deleteFavorite }) {\n    return (\n        <Media tag='li'>\n            <Media left middle>\n                <Media object src={baseUrl + tea.image} alt={tea.name} />\n            </Media>\n            <Media body className='ml-5'>\n                <Media heading>{tea.name}</Media>\n                <p>{tea.description}</p>\n                <Button outline color='danger' onClick={() => deleteFavorite(tea._id)}>\n                    <i className='fa fa-times' />\n                </Button>\n            </Media>\n        </Media>\n    );\n}\n\nconst Favorites = props => {\n\n    if (props.favorites.isLoading) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.favorites.errMess) {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <h4>{props.favorites.errMess}</h4>\n                </div>\n            </div>\n        )\n    }\n    if (props.favorites.favorites.teas) {\n        const favorites = props.favorites.favorites.teas.map(tea => \n            <div key={tea._id} className='col-12 mt-5'>\n                <RenderFavoriteItem tea={tea} deleteFavorite={props.deleteFavorite} />\n            </div>\n        );\n\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>My Favorites</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>My Favorites</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className='row'>\n                    <Media list>\n                        {favorites}\n                    </Media>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <h4>You have no favorites selected.</h4>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Favorites;","import React, { Component } from \"react\";\nimport {\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Tooltip,\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isNavOpen: false,\n      isSigninModalOpen: false,\n      isSignupModalOpen: false,\n      tooltipOpen: false,\n    };\n\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleSigninModal = this.toggleSigninModal.bind(this);\n    this.toggleSignupModal = this.toggleSignupModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen,\n    });\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen,\n    });\n  }\n\n  toggleSigninModal() {\n    this.setState({\n      isSigninModalOpen: !this.state.isSigninModalOpen,\n    });\n  }\n\n  toggleSignupModal() {\n    this.setState({\n      isSignupModalOpen: !this.state.isSignupModalOpen,\n    });\n  }\n\n  handleLogin(event) {\n    this.toggleSigninModal();\n    this.props.loginUser({\n      username: this.username.value,\n      password: this.password.value,\n    });\n    event.preventDefault();\n  }\n\n  handleSignup(event) {\n    this.toggleSignupModal();\n    this.props.signup({\n      username: this.username.value,\n      password: this.password.value,\n    });\n    event.preventDefault();\n  }\n\n  handleLogout() {\n    this.props.logoutUser();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Jumbotron fluid>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <h1>Paradiso</h1>\n                <h2>The best milk tea in SoCal</h2>\n              </div>\n            </div>\n          </div>\n        </Jumbotron>\n\n        <Navbar dark sticky=\"top\" expand=\"md\">\n          <div className=\"container\">\n            <NavbarToggler onClick={this.toggleNav} />\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/home\">\n                    <i className=\"fa fa-home fa-lg\" /> Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/directory\">\n                    <i className=\"fa fa-list fa-lg\" /> Directory\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/favorites\">\n                    <i className=\"fa fa-heart fa-lg\" /> My Favorites\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\n                    <i className=\"fa fa-info fa-lg\" /> About\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  {!this.props.auth.isAuthenticated ? (\n                    <>\n                      <Button outline onClick={this.toggleSigninModal}>\n                        <i className=\"fa fa-sign-in\" id=\"Tooltip\"/> Login\n                        {this.props.auth.isFetching ? (\n                          <span className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        ) : null}\n                        <Tooltip\n                          placement=\"bottom\"\n                          isOpen={this.state.tooltipOpen}\n                          target=\"Tooltip\"\n                          toggle={this.toggle}\n                        >\n                          Use \"admin\" for username, and \"password\" for password, give it a try!\n                        </Tooltip>\n                      </Button>\n                      <Button outline onClick={this.toggleSignupModal}>\n                        <i className=\"fa fa-user-plus\" /> Signup\n                        {this.props.auth.isFetching ? (\n                          <span className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        ) : null}\n                      </Button>\n                    </>\n                  ) : (\n                    <div>\n                      <div className=\"navbar-text mr-3\">\n                        {this.props.auth.user.username}\n                      </div>\n                      <Button outline onClick={this.handleLogout}>\n                        <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                        {this.props.auth.isFetching ? (\n                          <span className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        ) : null}\n                      </Button>\n                    </div>\n                  )}\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n\n        <Modal\n          isOpen={this.state.isSigninModalOpen}\n          toggle={this.toggleSigninModal}\n        >\n          <ModalHeader toggle={this.toggleSigninModal}>Login</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={(input) => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={(input) => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    innerRef={(input) => (this.remember = input)}\n                  />\n                  Remember me\n                </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.isSignupModalOpen}\n          toggle={this.SignuptoggleModal}\n        >\n          <ModalHeader toggle={this.toggleSignupModal}>Signup</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleSignup}>\n              <FormGroup>\n                <Label htmlFor=\"firstname\">Firstname</Label>\n                <Input\n                  type=\"text\"\n                  id=\"firstname\"\n                  name=\"firstname\"\n                  innerRef={(input) => (this.firstname = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"lastname\">Lastname</Label>\n                <Input\n                  type=\"text\"\n                  id=\"lastname\"\n                  name=\"lastname\"\n                  innerRef={(input) => (this.lastname = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={(input) => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={(input) => (this.password = input)}\n                />\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Signup\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <footer className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-4 col-sm-2 offset-1\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/directory'>Directory</Link></li>\n                            <li><Link to='/aboutus'>About</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-sm-3 text-center\">\n                        <h5>Social</h5>\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a> \n                    </div>\n                    <div className=\"col-sm-4 text-center\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-123-456-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\"><i className=\"fa fa-envelope-o\" /> MILKTEA@paradiso.co</a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return <Loading />;\n    }\n    if (errMess) {\n        return <h4>{errMess}</h4>;\n    }\n    return (\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(50%)'\n            }}>\n             <Card>\n                <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n    return (\n        <div className='container'>\n            <br/>\n            <div className='row'>\n                <div className='col-md m-1'>\n                    <h2>Featured Item</h2>\n                    <RenderCard\n                        item={props.tea}\n                        isLoading={props.teasLoading}\n                        errMess={props.teasErrMess}\n                    />\n                </div>\n                <div className='col-md m-1'>\n                    <h2>Promotion this month</h2>\n                    <RenderCard\n                        item={props.promotion}\n                        isLoading={props.promotionLoading}\n                        errMess={props.promotionErrMess}\n                    />\n                </div>\n                <div className='col-md m-1'>\n                    <h2>Our partner promotion</h2>\n                    <RenderCard \n                        item={props.partner}\n                        isLoading={props.partnerLoading}\n                        errMess={props.partnerErrMess}\n                    />\n                </div>\n            </div>        <br />\n        </div>\n\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderPartner({partner}) {\n    if (partner) {\n        return (\n            <React.Fragment>\n                <Media object src={baseUrl + partner.image} alt={partner.name} width=\"150\" />\n                <Media body className=\"ml-5 mb-4\">\n                    <Media heading>{partner.name}</Media>\n                    {partner.description}\n                </Media>\n            </React.Fragment>\n        );\n    }\n    return <div />;\n}\n\nfunction PartnerList(props) {\n    const partners = props.partners.partners.map(partner => {\n        return (\n            <Fade in key={partner._id}>\n                <Media tag=\"li\">\n                    <RenderPartner partner={partner} />\n                </Media>\n            </Fade>\n        );\n    });\n\n    if (props.partners.isLoading) {\n        return <Loading />;\n    }\n    if (props.partners.errMess) {\n        return (\n            <div className=\"col\">\n                <h4>{props.partners.errMess}</h4>\n            </div>\n        );\n    }\n    return (\n        <div className=\"col mt-4\">\n            <Media list>\n                <Stagger in>\n                    {partners}\n                </Stagger>\n            </Media>\n        </div>\n    );\n}\n\n\nfunction About(props) {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>Welcome to Paradiso</h3>\n                    <p>We have put the early-Taiwan epitome, historic memories and warm hospitality in this one cup of drink -- using home-made organic cane sugar, seasonal fresh fruits, natural ingredients (zero concentrated juice and powders). In every sip, you can taste the freshness of the tea and sweetness of the fruits, recreating the authentic and classic flavor all over again.</p>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>\n                <PartnerList partners={props.partners} />\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const fetchTeas = () => dispatch => {\n    dispatch(teasLoading());\n\n    return fetch(baseUrl + 'api/teas')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(teas => dispatch(addTeas(teas)))\n        .catch(error => dispatch(teasFailed(error.message)));\n};\n\nexport const teasLoading = () => ({\n    type: ActionTypes.TEAS_LOADING\n});\n\nexport const teasFailed = errMess => ({\n    type: ActionTypes.TEAS_FAILED,\n    payload: errMess\n});\n\nexport const addTeas = teas => ({\n    type: ActionTypes.ADD_TEAS,\n    payload: teas\n});\n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'api/comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (teaId, rating, text) => dispatch => {\n\n    const newComment = {\n        tea: teaId,\n        rating: rating,\n        text: text\n    }\n    console.log('Comment ', newComment);\n\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n\n    return fetch(baseUrl + 'api/comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': bearer\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => { throw error; }\n    )\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n        console.log('post comment', error.message);\n        alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n};\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'api/promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n\nexport const fetchPartners = () => dispatch => {\n    dispatch(partnersLoading());\n\n    return fetch(baseUrl + 'api/partners')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(partners => dispatch(addPartners(partners)))\n        .catch(error => dispatch(partnersFailed(error.message)));\n};\n\nexport const partnersLoading = () => ({\n    type: ActionTypes.PARTNERS_LOADING\n});\n\nexport const partnersFailed = errMess => ({\n    type: ActionTypes.PARTNERS_FAILED,\n    payload: errMess\n});\n\nexport const addPartners = partners => ({\n    type: ActionTypes.ADD_PARTNERS,\n    payload: partners\n});\n\nexport const postFeedback = feedback => () => {\n    return fetch(baseUrl + 'api/feedback', {\n        method: 'POST',\n        body: JSON.stringify(feedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => { throw error; }             \n    )\n    .then(response => response.json())\n    .then(response => {\n        console.log('Feedback:', response);\n        alert('Thank you for your feedback!\\n' + JSON.stringify(response));\n    })\n    .catch(error => {\n        console.log('Feedback:', error.message);\n        alert('Your feedback could not be posted\\nError: ' + error.message);\n    });\n};\n\nexport const requestLogin = creds => {\n    return {\n        type: ActionTypes.LOGIN_REQUEST,\n        creds\n    }\n}\n  \nexport const receiveLogin = response => {\n    return {\n        type: ActionTypes.LOGIN_SUCCESS,\n        token: response.token\n    }\n}\n  \nexport const loginError = message => {\n    return {\n        type: ActionTypes.LOGIN_FAILURE,\n        message\n    }\n}\n\nexport const loginUser = creds => dispatch => {\n    // We dispatch requestLogin to kickoff the call to the API\n    dispatch(requestLogin(creds))\n\n    return fetch(baseUrl + 'api/users/login', {\n        method: 'POST',\n        headers: { \n            'Content-Type': 'application/json' \n        },\n        body: JSON.stringify(creds)\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => { throw error; }\n    )\n    .then(response => response.json())\n    .then(response => {\n        if (response.success) {\n            // If login was successful, set the token in local storage\n            localStorage.setItem('token', response.token);\n            localStorage.setItem('creds', JSON.stringify(creds));\n            // Dispatch the success action\n            dispatch(fetchFavorites());\n            dispatch(receiveLogin(response));\n        } else {\n            const error = new Error('Error ' + response.status);\n            error.response = response;\n            throw error;\n        }\n    })\n    .catch(error => dispatch(loginError(error.message)))\n};\n\nexport const requestLogout = () => {\n    return {\n        type: ActionTypes.LOGOUT_REQUEST\n    }\n}\n  \nexport const receiveLogout = () => {\n    return {\n        type: ActionTypes.LOGOUT_SUCCESS\n    }\n}\n\n// Logs the user out\nexport const logoutUser = () => dispatch => {\n    dispatch(requestLogout())\n    localStorage.removeItem('token');\n    localStorage.removeItem('creds');\n    dispatch(favoritesFailed('Error 401: Unauthorized'));\n    dispatch(receiveLogout())\n}\n\nexport const postFavorite = teaId => dispatch => {\n\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n\n    return fetch(baseUrl + 'api/favorites/' + teaId, {\n        method: 'POST',\n        headers: {\n            'Authorization': bearer\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => { throw error; }\n    )\n    .then(response => response.json())\n    .then(favorites => {\n        console.log('Favorite Added', favorites);\n        dispatch(addFavorites(favorites));\n    })\n    .catch(error => dispatch(favoritesFailed(error.message)));\n}\n\nexport const deleteFavorite = teaId => dispatch => {\n\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n\n    return fetch(baseUrl + 'api/favorites/' + teaId, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': bearer\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => { throw error; }\n    )\n    .then(response => response.json())\n    .then(favorites => {\n        console.log('Favorite Deleted', favorites);\n        dispatch(addFavorites(favorites));\n    })\n    .catch(error => dispatch(favoritesFailed(error.message)));\n};\n\nexport const fetchFavorites = () => dispatch => {\n    dispatch(favoritesLoading());\n\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n\n    return fetch(baseUrl + 'api/favorites', {\n        headers: {\n            'Authorization': bearer\n        },\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => { throw error; }\n    )\n    .then(response => response.json())\n    .then(favorites => dispatch(addFavorites(favorites)))\n    .catch(error => dispatch(favoritesFailed(error.message)));\n}\n\nexport const favoritesLoading = () => ({\n    type: ActionTypes.FAVORITES_LOADING\n});\n\nexport const favoritesFailed = errMess => ({\n    type: ActionTypes.FAVORITES_FAILED,\n    payload: errMess\n});\n\nexport const addFavorites = favorites => ({\n    type: ActionTypes.ADD_FAVORITES,\n    payload: favorites\n});","export const ADD_TEAS = 'ADD_TEAS';\nexport const TEAS_LOADING = 'TEAS_LOADING';\nexport const TEAS_FAILED = 'TEAS_FAILED';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const ADD_PROMOTIONS = 'ADD_PROMOTIONS';\nexport const PROMOTIONS_LOADING = 'PROMOTIONS_LOADING';\nexport const PROMOTIONS_FAILED = 'PROMOTIONS_FAILED';\n\nexport const ADD_PARTNERS = 'ADD_PARTNERS';\nexport const PARTNERS_LOADING = 'PARTNERS_LOADING';\nexport const PARTNERS_FAILED = 'PARTNERS_FAILED';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n\nexport const FAVORITES_LOADING = 'FAVORITES_LOADING';\nexport const FAVORITES_FAILED = 'FAVORITES_FAILED';\nexport const ADD_FAVORITES = 'ADD_FAVORITES';","import React, { Component } from 'react';\nimport Directory from './DirectoryComponent';\nimport TeaInfo from './TeaInfoComponent';\nimport Favorites from './FavoriteComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport About from './AboutComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { postComment, postFeedback, fetchTeas, fetchComments, fetchPromotions, fetchPartners,\n    loginUser, logoutUser, fetchFavorites, postFavorite, deleteFavorite } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        teas: state.teas,\n        comments: state.comments,\n        partners: state.partners,\n        promotions: state.promotions, \n        favorites: state.favorites,\n        auth: state.auth\n    };\n};\n\nconst mapDispatchToProps = {\n    postComment: (teaId, rating, text) => (postComment(teaId, rating, text)),\n    postFeedback: feedback => (postFeedback(feedback)),\n    fetchTeas: () => (fetchTeas()),\n    resetFeedbackForm: () => (actions.reset('feedbackForm')),\n    fetchComments: () => (fetchComments()),\n    fetchPromotions: () => (fetchPromotions()),\n    fetchPartners: () => (fetchPartners()),\n    loginUser: creds => (loginUser(creds)),\n    logoutUser: () => (logoutUser()),\n    fetchFavorites: () => (fetchFavorites()),\n    postFavorite: (teaId) => (postFavorite(teaId)),\n    deleteFavorite: (teaId) => (deleteFavorite(teaId))\n};\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchTeas();\n        this.props.fetchComments();\n        this.props.fetchPromotions();\n        this.props.fetchPartners();\n        this.props.fetchFavorites();\n    }\n\n\n\n    render() {\n\n        const HomePage = () => {\n            \n            return (\n                <Home\n                    tea={this.props.teas.teas.filter(tea => tea.featured)[0]}\n                    teasLoading={this.props.teas.isLoading}\n                    teasErrMess={this.props.teas.errMess}\n                    promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\n                    promotionLoading={this.props.promotions.isLoading}\n                    promotionErrMess={this.props.promotions.errMess}\n                    partner={this.props.partners.partners.filter(partner => partner.featured)[0]}\n                    partnerLoading={this.props.partners.isLoading}\n                    partnerErrMess={this.props.partners.errMess}\n                />\n            );\n        }\n\n        const TeaWithId = ({match}) => {\n            return (\n                this.props.auth.isAuthenticated\n                ?\n                <TeaInfo\n                    tea={this.props.teas.teas.filter(tea => tea._id === match.params.teaId)[0]}\n                    isLoading={this.props.teas.isLoading}\n                    errMess={this.props.teas.errMess}\n                    comments={this.props.comments.comments.filter(comment => comment.tea === match.params.teaId)}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                    favorite={this.props.favorites.favorites && this.props.favorites.favorites.exists \n                                ? this.props.favorites.favorites.teas.some(tea => tea._id === match.params.teaId) : false}\n                    postFavorite={this.props.postFavorite}\n                />\n                :\n                <TeaInfo\n                    tea={this.props.teas.teas.filter(tea => tea._id === match.params.teaId)[0]}\n                    isLoading={this.props.teas.isLoading}\n                    errMess={this.props.teas.errMess}\n                    comments={this.props.comments.comments.filter(comment => comment.tea === match.params.teaId)}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                    favorite={false}\n                    postFavorite={this.props.postFavorite}\n                />\n            );\n        };\n\n        const PrivateRoute = ({ component: Component, ...rest }) => (\n            <Route {...rest} render={props => (\n                this.props.auth.isAuthenticated\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                              pathname: '/home',\n                              state: { from: props.location }\n                          }} \n                      />\n                )} \n            />\n        );\n\n        return (\n            <div>\n                <Header auth={this.props.auth} \n                    loginUser={this.props.loginUser} \n                    logoutUser={this.props.logoutUser} \n                />   \n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/directory' render={() => <Directory teas={this.props.teas} />} />\n                            <Route path='/directory/:teaId' component={TeaWithId} />\n                            <PrivateRoute exact path='/favorites' component={() => <Favorites favorites={this.props.favorites} deleteFavorite={this.props.deleteFavorite} />} />\n                            <Route exact path='/aboutus' render={() => <About partners={this.props.partners} /> } />\n                            <Redirect to='/home' />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Teas = (state = {\n        isLoading: true,\n        errMess: null,\n        teas: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_TEAS:\n            return {...state, isLoading: false, errMess: null, teas: action.payload};\n\n        case ActionTypes.TEAS_LOADING:\n            return {...state, isLoading: true, errMess: null, teas: []};\n\n        case ActionTypes.TEAS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            const comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Partners = (state = { isLoading: true,\n                                    errMess: null,\n                                    partners: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PARTNERS:\n            return {...state, isLoading: false, errMess: null, partners: action.payload};\n\n        case ActionTypes.PARTNERS_LOADING:\n            return {...state, isLoading: true, errMess: null, partners: []}\n\n        case ActionTypes.PARTNERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = { isLoading: true,\n                                        errMess: null,\n                                        promotions: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOTIONS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOTIONS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []};\n\n        case ActionTypes.PROMOTIONS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const favorites = (state = {\n        isLoading: true,\n        errMess: null,\n        favorites: null\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_FAVORITES:\n            return {...state, isLoading: false, errMess: null, favorites: action.payload};\n            \n        case ActionTypes.FAVORITES_LOADING:\n            return {...state, isLoading: true, errMess: null, favorites: null};\n\n        case ActionTypes.FAVORITES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, favorites: null};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n// The auth reducer. The starting state sets authentication\n// based on a token being in local storage. In a real app,\n// we would also want a util to check if the token is expired.\nexport const Auth = (state = {\n        isLoading: false,\n        isAuthenticated: localStorage.getItem('token') ? true : false,\n        token: localStorage.getItem('token'),\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n                user: action.creds\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                token: action.token\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null\n            };\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstName: '',\n    lastName: '',\n    phoneNum: '',\n    email: '',\n    agree: false,\n    contactType: 'Phone',\n    feedback: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Teas } from './teas';\nimport { Comments } from './comments';\nimport { Partners } from './partners';\nimport { Promotions } from './promotions';\nimport { favorites } from './favorites';\nimport { Auth } from './auth';\n\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            teas: Teas,\n            comments: Comments,\n            partners: Partners,\n            promotions: Promotions,\n            auth: Auth,\n            favorites,\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'typeface-acme';\nimport 'typeface-open-sans';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}